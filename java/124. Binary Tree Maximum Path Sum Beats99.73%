/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int maxPathSum(TreeNode root) {
        if(root==null)
            return 0;
        else{
            int[] left=helper(root.left);
            int[] right=helper(root.right);
            return Math.max(Math.max(root.val+Math.max(left[0],0)+Math.max(right[0],0),left[1]),right[1]);
        }
    }
    private int[] helper(TreeNode root){
        if(root==null){
            return new int[]{0,Integer.MIN_VALUE};
        }
        else{
            int[] res=new int[2];
            int[] left=helper(root.left);
            int[] right=helper(root.right);
            res[0]=root.val+Math.max(Math.max(left[0],right[0]),0);
            res[1]=Math.max(Math.max(Math.max(res[0],left[0]+right[0]+root.val),left[1]),right[1]);
            return res;
        }
    }
}
