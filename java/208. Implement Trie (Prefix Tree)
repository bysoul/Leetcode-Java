class Trie {
    TrieNode root;

    /** Initialize your data structure here. */
    public Trie() {
        root=new TrieNode();
        
    }
    
    /** Inserts a word into the trie. */
    public void insert(String word) {
        TrieNode temp=root;
        for(int i=0;i<word.length();i++){
            int t=word.charAt(i)-'a';
            if(temp.n[t]==null){
                temp.n[t]=new TrieNode();
            }
            temp=temp.n[t];
        }
        temp.end=true;
    }
    
    /** Returns if the word is in the trie. */
    public boolean search(String word) {
        TrieNode temp=root;
        for(int i=0;i<word.length();i++){
            int t=word.charAt(i)-'a';
            if(temp.n[t]==null){
                return false;
            }
            temp=temp.n[t];
            
        }
        return temp.end;
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    public boolean startsWith(String prefix) {
        TrieNode temp=root;
        for(int i=0;i<prefix.length();i++){
            int t=prefix.charAt(i)-'a';
            if(temp.n[t]==null){
                return false;
            }
            temp=temp.n[t];
        }
        return true;
    }
}
class TrieNode{
    boolean end;
    TrieNode[] n;
    public TrieNode(){
        n=new TrieNode[26];
    }
}

/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */
