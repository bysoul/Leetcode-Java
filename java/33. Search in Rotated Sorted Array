class Solution {
    public int search(int[] nums, int target) {
        return find(nums,0,nums.length-1,target);
    }
    int find(int[] ar,int s,int e,int x){
        while(s<=e){
            int mid=(s+e)/2;
            if(x>ar[s]){
                if(x==ar[mid]) return mid;
                else if(x<ar[mid]) return bs(ar,s,mid-1,x);
                else {
                    if(ar[mid]>ar[s])
                        s=mid+1;
                    else if(ar[mid]<ar[s])
                        e=mid-1;
                    else
                        s=mid+1;
                    continue;
                }
            }
            else if(x<ar[s]){
                if(x==ar[mid]) return mid;
                else if(x>ar[mid]) return bs(ar,mid+1,e,x);
                else {
                    if(ar[mid]>ar[s])
                        s=mid+1;
                    else if(ar[mid]<ar[s])
                        e=mid-1;
                    else
                        s=mid+1;
                    continue;
                }
            }
            else return s;
        }
        return -1;
    }
    int bs(int[] ar,int s,int e,int x){
        if(s>e) return -1;
        int mid;
        while(s<=e){
            mid=(s+e)/2;
            if(ar[mid]==x) return mid;
            else if(ar[mid]>x){
                e=mid-1;
                continue;
            }
            else{
                s=mid+1;
                continue;
            }
        }
        return -1;
    }
}
//题目要求O(nlogn)，然而最快的是这样的
class Solution {
    public int search(int[] nums, int target) {
        for(int i = 0; i< nums.length; i++){
            if( target == nums[i]){
                return i;
            }
        }
        return -1;
    }
}
