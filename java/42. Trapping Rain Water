class Solution {
    public int trap(int[] height) {
        ArrayList<Cut>cuts=new ArrayList<Cut>();
        int max=0;
        int maxidx=0;
        int idx[]={0,0};
        int res=0;
        for(int i=0;i<height.length;i++){
            if(height[i]>max){
                max=height[i];
                maxidx=i;
            }
        }
        max=0;
        for(int i=0;i<=maxidx&&i<height.length;i++){
            if(height[i]>0&&height[i]>=max){
                if(max==0)
                {
                    max=height[i];
                    idx[0]=i;
                }
                else{
                    if(idx[1]==0){
                        idx[1]=i;
                        cuts.add(new Cut(idx,max));
                        max=height[i];
                        idx[0]=i;
                        idx[1]=0;
                    }
                }
            }
        }
        max=0;
        for(int i=height.length-1;i>=maxidx;i--){
            if(height[i]>0&&height[i]>=max){
                if(max==0)
                {
                    max=height[i];
                    idx[1]=i;
                }
                else{
                    if(idx[0]==0){
                        idx[0]=i;
                        cuts.add(new Cut(idx,max));
                        max=height[i];
                        idx[1]=i;
                        idx[0]=0;
                    }
                }
            }
        }
        for(Cut c:cuts){
            for(int f=c.from;f<=c.to;f++)
                res+=c.height-height[f];
        }
        return res;
    }
}
class Cut{
    int from,to;
    int height;
    Cut(int[]i,int h){
        height=h;
        from=i[0];
        to=i[1];
    }
}
