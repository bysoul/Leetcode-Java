class Solution {
    public void nextPermutation(int[] nums) {
        int n=nums.length;
        int i=n-1;
        for(;i>0;i--){
            if(nums[i]>nums[i-1])
                break;
        }
        if(i==0){
            reverse(nums,0,n-1);
            return;
        }
        int j=n-1;
        for(;j>0;j--){
            if(nums[j]>nums[i-1])
                break;
        }
        int temp=nums[j];
        nums[j]=nums[i-1];
        nums[i-1]=temp;
        if(i==n-1) return;
        reverse(nums,i,n-1);
        return;
    }
    void reverse(int[] nums,int s,int e){
        while(s<=e){
            int temp=nums[s];
            nums[s]=nums[e];
            nums[e]=temp;
            s++;
            e--;
        }
        return;
    }
}
//Bisic idea：
//1.from n-1 to 0 find first element whose value is bigger than it's previous and index i (从后向前找到第一个大于之前元素的索引i)
//2.from n-1 to i find first element whose value is bigger than i-1 and index j (在n-1到i找到第一个大于nums[i-1]的索引j)
//3.swap i-1 and j
//4.reverse nums from i to n-1
